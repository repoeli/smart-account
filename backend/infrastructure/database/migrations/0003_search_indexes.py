# Generated by hand to add search/pagination indexes
from django.db import migrations


def create_indexes(apps, schema_editor):
    # Only run on PostgreSQL
    if schema_editor.connection.vendor != 'postgresql':
        return

    # Enable pg_trgm for trigram indexes (idempotent)
    schema_editor.execute("CREATE EXTENSION IF NOT EXISTS pg_trgm;")

    # Composite indexes for cursor pagination and filtering
    schema_editor.execute(
        """
        CREATE INDEX IF NOT EXISTS receipts_user_date_id_desc
        ON receipts (user_id, ((ocr_data->>'date')) DESC, id DESC);
        """
    )

    schema_editor.execute(
        """
        CREATE INDEX IF NOT EXISTS receipts_user_amount_id_desc
        ON receipts (user_id, ((ocr_data->>'total_amount')::numeric) DESC, id DESC);
        """
    )

    schema_editor.execute(
        """
        CREATE INDEX IF NOT EXISTS receipts_user_merchant_idx
        ON receipts (user_id, (ocr_data->>'merchant_name'));
        """
    )

    schema_editor.execute(
        """
        CREATE INDEX IF NOT EXISTS receipts_user_currency_idx
        ON receipts (user_id, (ocr_data->>'currency'));
        """
    )

    schema_editor.execute(
        """
        CREATE INDEX IF NOT EXISTS receipts_user_provider_idx
        ON receipts (user_id, ((metadata->'custom_fields'->>'storage_provider')));
        """
    )

    schema_editor.execute(
        """
        CREATE INDEX IF NOT EXISTS receipts_user_confidence_idx
        ON receipts (user_id, ((ocr_data->>'confidence_score')::double precision));
        """
    )

    # Trigram GIN indexes for fuzzy text search
    schema_editor.execute(
        """
        CREATE INDEX IF NOT EXISTS receipts_trgm_merchant_idx
        ON receipts USING GIN ((ocr_data->>'merchant_name') gin_trgm_ops);
        """
    )

    schema_editor.execute(
        """
        CREATE INDEX IF NOT EXISTS receipts_trgm_notes_idx
        ON receipts USING GIN ((metadata->>'notes') gin_trgm_ops);
        """
    )

    schema_editor.execute(
        """
        CREATE INDEX IF NOT EXISTS receipts_trgm_receipt_number_idx
        ON receipts USING GIN ((ocr_data->>'receipt_number') gin_trgm_ops);
        """
    )


def drop_indexes(apps, schema_editor):
    if schema_editor.connection.vendor != 'postgresql':
        return
    # Drop in reverse (leave extension installed)
    schema_editor.execute("DROP INDEX IF EXISTS receipts_trgm_receipt_number_idx;")
    schema_editor.execute("DROP INDEX IF EXISTS receipts_trgm_notes_idx;")
    schema_editor.execute("DROP INDEX IF EXISTS receipts_trgm_merchant_idx;")
    schema_editor.execute("DROP INDEX IF EXISTS receipts_user_confidence_idx;")
    schema_editor.execute("DROP INDEX IF EXISTS receipts_user_provider_idx;")
    schema_editor.execute("DROP INDEX IF EXISTS receipts_user_currency_idx;")
    schema_editor.execute("DROP INDEX IF EXISTS receipts_user_merchant_idx;")
    schema_editor.execute("DROP INDEX IF EXISTS receipts_user_amount_id_desc;")
    schema_editor.execute("DROP INDEX IF EXISTS receipts_user_date_id_desc;")


class Migration(migrations.Migration):
    atomic = True

    dependencies = [
        ('infrastructure_database', '0002_receipt'),
    ]

    operations = [
        migrations.RunPython(create_indexes, drop_indexes),
    ]


